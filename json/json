#!/bin/bash
# json - convert to JSON
#
# Copyright (C) 2013-2015  ARPA-SIM <urpsim@smr.arpa.emr.it>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Author: Emanuele Di Giacomo <edigiacomo@arpa.emr.it>

function print_usage()
{
	printf "Usage $0 [ -t dbajson|geojson ] [ -f skip|none|preserve ]\n"
}

if [ x"$ARKI_XARGS_FORMAT" == x ]
then
    jsontype=dbajson
    filtertype=skip
    while getopts "ht:f:" opt
    do
        case $opt in
            h)
                print_usage
                exit 0 ;;
            t)
                case $OPTARG in
                    dbajson) jsontype=dbajson ;;
                    geojson) jsontype=geojson ;;
                    *) print_usage >&2 ; exit 1 ;;
                esac
                ;;
            f)
                case $OPTARG in
                    skip) filtertype=skip ;;
                    none) filtertype=none ;;
                    preserve) filtertype=preserve ;;
                    *) print_usage >&2 ; exit 1 ;;
                esac
                ;;
            *)
                print_usage >&2
                exit 1
                ;;
        esac
    done

    case $jsontype in
        dbajson) jsonconverter="dbamsg dump --json" ;;
        geojson) jsonconverter="bufr2json" ;;
    esac

    case $filtertype in
        skip) qcfilter="dba_qcfilter" ;;
        none) qcfilter="cat" ;;
        preserve) qcfilter="dba_qcfilter --preserve" ;;
    esac

    exec arki-xargs --time-interval=minute $0 | $qcfilter | $jsonconverter
else
    case $ARKI_XARGS_FORMAT in
        BUFR) dataconverter=cat ;;
        VM2)
            tempfile="$(mktemp --suffix .sqlite3)" || exit 1
            meteo-vm2-to-bufr < $1 | dbadb import --fast --overwrite --wipe-first --dsn=sqlite:${tempfile}
            dbadb export --dsn=sqlite:${tempfile}
            rm -f $tempfile
            ;;
    esac
    $dataconverter < $1
fi
